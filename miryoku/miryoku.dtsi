// Copyright 2022 Manna Harbour
// https://github.com/manna-harbour/miryoku

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "miryoku.h"

/ {
  keymap {
    compatible = "zmk,keymap";
#define MIRYOKU_X(LAYER, STRING) \
    U_##LAYER## { \
      label = STRING; \
      bindings = < U_MACRO_VA_ARGS(MIRYOKU_LAYERMAPPING_##LAYER, MIRYOKU_LAYER_##LAYER) >; \
    };
MIRYOKU_LAYER_LIST
#undef MIRYOKU_X
  };
};

#include "miryoku_shift_functions.dtsi"

#include "miryoku_double_tap_guard.dtsi"

#if defined (MIRYOKU_KLUDGE_MOUSEKEYSPR)
  #include "miryoku_kludge_mousekeyspr.dtsi"
#else
  #include "miryoku_mousekeys.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_THUMBCOMBOS)
  #include "miryoku_kludge_thumbcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_TOPROWCOMBOS)
  #include "miryoku_kludge_toprowcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_BOTTOMROWCOMBOS)
  #include "miryoku_kludge_bottomrowcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_TAPDELAY)
  #include "miryoku_kludge_tapdelay.dtsi"
#else
  #include "miryoku_behaviors.dtsi"
#endif

// My configs

/ {
  combos {
    compatible = "zmk,combos";
    combo_lalt {
      timeout-ms = <50>;
      key-positions = <1 11>;
      bindings = <&sl LALT>;
    };
    combo_ralt {
      timeout-ms = <50>;
      key-positions = <8 18>;
      bindings = <&sk RALT>;
    };
    combo_lgui {
      timeout-ms = <50>;
      key-positions = <3 13>;
      bindings = <&sk LGUI>;
    };
    combo_rgui {
      timeout-ms = <50>;
      key-positions = <6 16>;
      bindings = <&sk RGUI>;
    };
    combo_lctrl {
      timeout-ms = <50>;
      key-positions = <2 12>;
      bindings = <&sk LCTRL>;
    };
    combo_rctrl {
      timeout-ms = <50>;
      key-positions = <7 17>;
      bindings = <&sk RCTRL>;
    };
    // combo_lshift {
    //   timeout-ms = <50>;
    //   key-positions = <3 13>;
    //   bindings = <&sk LSHIFT>;
    // };
    // combo_rshift {
    //   timeout-ms = <50>;
    //   key-positions = <6 16>;
    //   bindings = <&sk RSHIFT>;
    // };
    combo_mouse {
      timeout-ms = <50>;
      key-positions = <30 31>;
      bindings = <&to U_MOUSE>;
      layers = <0>;
    };
    combo_media {
      timeout-ms = <50>;
      key-positions = <11 21>;
      bindings = <&sl U_MEDIA>;
    };
    combo_nav {
      timeout-ms = <50>;
      key-positions = <12 22>;
      bindings = <&sl U_NAV>;
    };
    // combo_lbase {
    //   timeout-ms = <50>;
    //   key-positions = <13 23>;
    //   bindings = <&sl U_BASE>;
    // };
    combo_sym {
      timeout-ms = <50>;
      key-positions = <16 26>;
      bindings = <&sl U_SYM>;
    };
    combo_num {
      timeout-ms = <50>;
      key-positions = <17 27>;
      bindings = <&sl U_NUM>;
    };
    combo_fun {
      timeout-ms = <50>;
      key-positions = <18 28>;
      bindings = <&sl U_FUN>;
    };
    // combo_rbase {
    //   timeout-ms = <50>;
    //   key-positions = <16 26>;
    //   bindings = <&sl U_BASE>;
    // };
    combo_enter {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp ENTER>;
    };
   combo_tab {
      timeout-ms = <50>;
      key-positions = <13 14>;
      bindings = <&kp TAB>;
    };
   combo_delete {
      timeout-ms = <50>;
      key-positions = <13 23>;
      bindings = <&kp DELETE>;
    };
  };
};


/ {
    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MOD_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &td_mt
            >;
        };
    };
};